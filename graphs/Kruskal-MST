//Kruskal-MST
// inside int main()
vector< pair<int, ii> > EdgeList; // (weight, two vertices) of the edge
for (int i = 0; i < E; i++) {
    scanf("%d %d %d", &u, &v, &w); // read the triple: (u, v, w)
    EdgeList.push_back(make_pair(w, ii(u, v))); } // (w, u, v)
sort(EdgeList.begin(), EdgeList.end());
int mst_cost = 0;
UnionFind UF(V); // all V are disjoint sets initially
for (int i = 0; i < E; i++) { // for each edge, O(E)
    pair<int, ii> front = EdgeList[i];
    if (!UF.isSameSet(front.second.first, front.second.second)) { // check
        mst_cost += front.first; // add the weight of e to MST
        UF.unionSet(front.second.first, front.second.second); // link them
} }
